{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sumuk\\\\Documents\\\\MemeGenerator\\\\src\\\\MemeGenerator.js\";\nimport React from \"react\";\n\nclass MemeGenerator extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      memeimgs: []\n    };\n    this.ChangeHandler = this.ChangeHandler.bind(this);\n    this.SubmitHandler = this.SubmitHandler.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        mem\n      } = response.data;\n      this.setState({\n        memeimgs: mem\n      });\n    });\n  }\n\n  ChangeHandler(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  SubmitHandler(event) {\n    event.preventDefault();\n    const randNum = Math.floor(Math.random() * this.state.MemeImgs.length);\n    const randMemeImg = this.state.MemeImgs[randNum].url;\n    this.setState({\n      randomImg: randMemeImg\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"meme-form\",\n      onSubmit: this.SubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Toptext\",\n      placeholder: \"Top text\",\n      value: this.state.topText,\n      onChange: this.ChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Bottomtext\",\n      placeholder: \"Bottom text\",\n      value: this.state.bottomText,\n      onChange: this.ChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \" GENERATE \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"meme\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.randomImg,\n      alt: \"Meme\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \" \", this.state.topText, \" \"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \" \", this.state.bottomText, \" \")));\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["C:/Users/sumuk/Documents/MemeGenerator/src/MemeGenerator.js"],"names":["React","MemeGenerator","Component","constructor","state","topText","bottomText","randomImg","memeimgs","ChangeHandler","bind","SubmitHandler","componentDidMount","fetch","then","response","json","mem","data","setState","event","name","value","target","preventDefault","randNum","Math","floor","random","MemeImgs","length","randMemeImg","url","render"],"mappings":"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","sourcesContent":["import React from \"react\"\r\n\r\nclass MemeGenerator extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\r\n            memeimgs: []\r\n\r\n        }\r\n        this.ChangeHandler = this.ChangeHandler.bind(this)\r\n        this.SubmitHandler = this.SubmitHandler.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n        .then(response => response.json())\r\n        .then(response =>  {\r\n            const {mem} = response.data\r\n            this.setState({memeimgs:mem})\r\n\r\n\r\n        })\r\n    }\r\n\r\n    ChangeHandler(event) {\r\n        const {name,value} = event.target\r\n        this.setState({ [name] : value})\r\n\r\n\r\n    }\r\n\r\n    SubmitHandler(event) {\r\n        event.preventDefault()\r\n        const randNum = Math.floor(Math.random() * this.state.MemeImgs.length)\r\n        const randMemeImg = this.state.MemeImgs[randNum].url\r\n        this.setState({ randomImg: randMemeImg })\r\n\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <form className=\"meme-form\" onSubmit={this.SubmitHandler}>\r\n                <input type=\"text\" name=\"Toptext\" placeholder=\"Top text\" value={this.state.topText} onChange={this.ChangeHandler} />\r\n                <input type=\"text\" name=\"Bottomtext\" placeholder=\"Bottom text\"value={this.state.bottomText} onChange={this.ChangeHandler} />\r\n                <button> GENERATE </button>\r\n                </form>\r\n            <div className=\"meme\">\r\n                <img src={this.state.randomImg} alt=\"Meme\"/>\r\n                <h3 className=\"top\"> {this.state.topText} </h3>\r\n                <h3 className=\"bottom\"> {this.state.bottomText} </h3>\r\n            </div>\r\n        </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default MemeGenerator"]},"metadata":{},"sourceType":"module"}